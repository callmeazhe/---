一，理解一下三种区别
int a = 1, 
int* a = &a;
int p = *a;

二，指针长度
结论：32位的操作系统上 4byte，64位的操作系统上 8byte
因为程序最大能使用的内存空间的地址是2的32次方，指针只需4位就可以表示出来所有的内存空间。
1 byte = 8 bit

三，值，地址，地址的地址
int a = 3;定义a变量，其值为3（地址不透明）
int* aa = &a;定义aa变量，其值为a的地址（值不透明）
先定义一个方法，形参为int**类型
fun(int** address){
}
此时，若将&aa传入，address代表的含义就是aa的地址，也就是a地址变量的地址

四，内存静态分配，动态分配以及Java对应的表现形式
简单理解，静态分配在栈里，随着方法出栈被擦除，动态分配在堆里，不跟随方法生命周期
1.从静态区域分配（属静态分配）。内存在程序编译的时候就已经分配好了，这块内存在程序的整个运行期间都存在。例如全局，static变量
2.从栈区域分配（属静态分配）。在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函数执行结束，这些存储单元自动擦除，内存分配运算在cpu指令集中，效率高，容量有限
3.从堆区域分配（属动态分配）。C用malloc或Java用new方法申请内存，C用free释放内存
